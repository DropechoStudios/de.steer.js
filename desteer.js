var DE=DE||{};DE.Errors={};DE.Errors.ConversionError=function(opts){this.name="ConversionError";this.message=opts.message||"Unknown Error.";this.property=opts.property+" "||"";this.toString=function(){return this.name+": "+this.property+this.message}};var DE=DE||{};DE.Steer=DE.Steer||{};
DE.Steer.Extender=function(){var checkExtend=function(entity){if(entity.pos==undefined)throw new DE.Errors.ConversionError({property:"entity.pos",message:" is undefined. You must set the position vector in the converter."});if(entity.heading==undefined)throw new DE.Errors.ConversionError({property:"entity.heading",message:" is undefined. You must set the heading vector in the converter."});if(entity.max_speed==undefined)throw new DE.Errors.ConversionError({property:"entity.max_speed ",message:"is undefined. You must set the max_speed scalar in the converter."});
};function Extender(){}Extender.prototype.extend=function(entity){if(entity instanceof DE.Vector)return entity;var root=entity.prototype.constructor.name;if(DE.Steer.Extenders[root]===undefined)throw new DE.Errors.ConversionError({property:"DE.Steer.Extenders."+root,message:"is undefined.  Register a converter for this type."});var converted=this.converter(entity);checkConversion(converted);return converted};return new Extender}();var DE=DE||{};DE.Math=DE.Math||{};DE.Math.PI=Math!==undefined?Math.PI:3.141592653;DE.Math.Clamp=function(number,min,max){var c=Math.min(number,max);return Math.max(min,c)};DE.Math.Rand=function(min,max){return min!==undefined?DE.Math.Clamp(Math.random()*max,min,max):Math.random()};DE.Math.RadToDeg=function(radians){return DE.Math.CleanFloat(radians*180/DE.Math.PI)};DE.Math.DegToRad=function(degrees){return DE.Math.CleanFloat(degrees*DE.Math.PI/180)};DE.Math.CleanFloat=function(num){return parseFloat(num.toFixed(7))};var DE=DE||{};DE.Math=DE.Math||{};
DE.Math.Vector=function(){function Vector(x,y){if(typeof DE.Util.Unwrap(x)==="object"){this.x=DE.Util.Unwrap(x.x)||0;this.y=DE.Util.Unwrap(x.y)||0}else{this.x=DE.Util.Unwrap(x)||0;this.y=DE.Util.Unwrap(y)||0}return this}Vector.prototype.Scale=function(scale){scale=DE.Util.Unwrap(scale)||1;this.x*=scale;this.y*=scale;return this};Vector.prototype.Add=function(vec){vec=DE.Util.Unwrap(vec);this.x+=vec.x;this.y+=vec.y;return this};Vector.prototype.Sub=function(vec){vec=DE.Util.Unwrap(vec);this.x-=vec.x;
this.y-=vec.y;return this};Vector.prototype.Dot=function(vec){vec=DE.Util.Unwrap(vec);return this.x*vec.x+this.y*vec.y};Vector.prototype.Length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)};Vector.prototype.LengthSQ=function(){return this.x*this.x+this.y*this.y};Vector.prototype.DistanceFrom=function(vec){vec=DE.Util.Unwrap(vec);return(new Vector(this.x-vec.x,this.y-vec.y)).Length()};Vector.prototype.Normalize=function(scalar){var length=this.Length();var normalLength=length!=0?1/length:
1;this.x=this.x*normalLength;this.y=this.y*normalLength;if(scalar>0)this.Scale(scalar);return this};Vector.prototype.Perp=function(){return DE.Math.Vec2d(-this.y,this.x)};return Vector}();DE.Math.Vec2d=function(x,y){return new DE.Math.Vector(x,y)};DE.Math.HeadingVec=function(degrees){var rads=DE.Math.DegToRad(degrees);var x=DE.Math.CleanFloat(Math.cos(rads));var y=DE.Math.CleanFloat(Math.sin(rads));return DE.Math.Vec2d(x,y)};
DE.Math.Vector.Add=function(vec1,vec2){vec1=DE.Util.Unwrap(vec1);vec2=DE.Util.Unwrap(vec2);return DE.Math.Vec2d(vec1.x+vec2.x,vec1.y+vec2.y)};DE.Math.Vector.Sub=function(vec1,vec2){vec1=DE.Util.Unwrap(vec1);vec2=DE.Util.Unwrap(vec2);return DE.Math.Vec2d(vec1.x-vec2.x,vec1.y-vec2.y)};
DE.Math.Vector.Normalize=function(vec,scalar){var normalVec=DE.Math.Vec2d(vec.x,vec.y);var length=normalVec.Length();var normalLength=length!=0?1/length:1;normalVec.x=normalVec.x*normalLength;normalVec.y=normalVec.y*normalLength;if(scalar>0)normalVec.Scale(scalar);return normalVec};
DE.Math.Vector.HeadingToDeg=function(HeadingVec){var world=DE.Math.Vec2d(1,0);var heading=DE.Math.Vector.Normalize(HeadingVec);var degrees=DE.Math.RadToDeg(Math.acos(world.Dot(heading)));if(heading.y<0)degrees=360-degrees;return degrees};DE.Math.Vector.WorldToLocal=function(vec,headingVec){var perp=headingVec.Perp();var mat=[[headingVec.x,perp.x],[headingVec.y,perp.y]];var x=vec.x*mat[0][0]+vec.y*mat[0][1];var y=vec.x*mat[1][0]+vec.y*mat[1][1];return DE.Math.Vec2d(x,y)};
DE.Math.Vector.LocalToWorld=function(vec,headingVec,pos){var world=DE.Math.Vec2d(1,0);var degrees=DE.Math.Vector.HeadingToDeg(headingVec);var inverse=DE.Math.Vector.WorldToLocal(DE.Math.HeadingVec(-degrees),world);var perp=inverse.Perp();var mat=[[inverse.x,perp.x],[inverse.y,perp.y]];var x=DE.Math.CleanFloat(vec.x*mat[0][0]+vec.y*mat[0][1]);var y=DE.Math.CleanFloat(vec.x*mat[1][0]+vec.y*mat[1][1]);return DE.Math.Vec2d(x,y).Add(pos)};
DE.Math.Vector.HeadingToDegTest=function(){for(var i=0;i<360;i++){var x=DE.Math.CleanFloat(Math.cos(DE.Math.DegToRad(i)));var y=DE.Math.CleanFloat(Math.sin(DE.Math.DegToRad(i)));var heading=DE.Math.Vec2d(x,y);var deg=DE.Math.Vector.HeadingToDeg(heading);if(deg<i-1E-4||deg>i+1E-4)console.log("heading:",heading,"got:",deg," Expected:",i)}};
DE.Math.Vector.VecTest=function(){var test=DE.Vec2d(1,0);for(var i=0;i<=360;i+=5){var local=DE.Math.Vector.WorldToLocal(test,DE.Math.HeadingVec(i));var world=DE.Math.Vector.LocalToWorld(local,DE.Math.HeadingVec(i),DE.Math.Vec2d(0,0));if(world.x<test.x-1E-4||world.x>test.x+1E-4)console.log("AT: ",i," Expected x to be:",test.x,"  Got:",world.x);if(world.y<test.y-1E-4||world.y>test.y+1E-4)console.log("AT: ",i," Expected x to be:",test.y,"  Got:",world.y)}};var DE=DE||{};DE.Steer=DE.Steer||{};
DE.Steer.Steering=function(){function Steering(){}Steering.prototype.Align=function(first_argument){};Steering.prototype.Arrive=function(pos,target,max_speed,decelForce){decelForce=decelForce||5;var distToTarget=pos.DistanceFrom(target);if(distToTarget>0){var arriveSpeed=distToTarget/decelForce;arriveSpeed=DE.Math.Clamp(arriveSpeed,0,max_speed);return this.Seek(pos,target,arriveSpeed)}return DE.Math.Vec2d(0,0)};Steering.prototype.Cohese=function(pos,neighborPositions,max_speed){var centerOfMass=DE.Math.Vec2d(0,
0);var neighborCount=neighborPositions.length;for(var i=0;i<neighborCount;i++)centerOfMass.Add(neighborPositions[i]);if(neighborCount>0){centerOfMass.Scale(1/neighborCount);return this.Arrive(pos,centerOfMass,max_speed)}return DE.Math.Vec2d(0,0)};Steering.prototype.Evade=function(pos,target,max_speed,targetHeadingDeg,targetCurrentSpeed){var toTarget=DE.Math.Vector.Sub(target,pos);var heading=DE.Math.HeadingVec(targetHeadingDeg);var targetCurrentSpeed=targetCurrentSpeed||60;var lookAhead=toTarget.Length()/
(max_speed+targetCurrentSpeed);var estimatedTargetPos=DE.Math.Vector.Add(target,heading.Normalize(lookAhead));return this.Flee(pos,estimatedTargetPos)};Steering.prototype.Flee=function(pos,target,max_speed,fleeRadius){var shouldFlee=fleeRadius===undefined||fleeRadius===-1||target.DistanceFrom(pos)<=fleeRadius;var flee=DE.Math.Vector.Sub(pos,target).Normalize(max_speed);return shouldFlee?flee:DE.Math.Vec2d(0,0)};Steering.prototype.Hide=function(first_argument){};Steering.prototype.Interpose=function(first_argument){};
Steering.prototype.ObstacleAvoid=function(first_argument){};Steering.prototype.Pursuit=function(pos,target,max_speed,targetHeadingDeg,targetCurrentSpeed){var toTarget=DE.Math.Vector.Sub(target,pos),heading=DE.Math.HeadingVec(targetHeadingDeg),targetCurrentSpeed=targetCurrentSpeed||60;var lookAhead=toTarget.Length()/(max_speed+targetCurrentSpeed);var estimatedTargetPos=DE.Math.Vector.Add(target,heading.Normalize(lookAhead));return this.Seek(pos,estimatedTargetPos)};Steering.prototype.Seek=function(pos,
target,max_speed){return DE.Math.Vector.Sub(target,pos).Normalize(max_speed)};Steering.prototype.Seperation=function(pos,neighborPositions){var SteeringForce=DE.Math.Vec2d(0,0),neighborCount=neighborPositions.length;for(var i=0;i<neighborCount;i++){var awayFromNeighbor=DE.Math.Vector.Sub(pos,neighborPositions[i]);var distanceToNeighbor=awayFromNeighbor.Length();SteeringForce.Add(awayFromNeighbor.Normalize(128/distanceToNeighbor))}return SteeringForce};Steering.prototype.Wander=function(pos,target,
HeadingVec){var radius=1,dist=10,jitter=1;var wanderx=DE.Math.Rand(-1,1);var wandery=DE.Math.Rand(-1,1);var wanderVec=DE.Math.Vec2d(wanderx,wandery).Normalize();target.Add(wanderVec).Normalize(radius);var localTarget=DE.Math.Vector.Add(target,DE.Math.Vec2d(dist,0));var targetWorld=DE.Math.Vector.LocalToWorld(localTarget,HeadingVec,pos);return this.Seek(pos,targetWorld,1)};return new Steering}();var DE=DE||{};DE.Util=DE.Util||{};DE.Util.Unwrap=function(val){return typeof val==="function"?val():val};DE.Util.RemoveElement=function(array,index){var newArray=[];for(var i=0;i<array.length;i++)newArray.push(array[i]);newArray.splice(index,1);return newArray};
